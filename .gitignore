*/__pycache__/*
.scrapy

test_cache
htmlcov
# Jupyter Notebook
.notipy.json
instance/
# PyInstaller
share/python-wheels/
parts/
wheels/
__pycache__
# PEP 582; used by e.g. github.com/David-OConnor/pyflow
eggs/
# mypy
.eggs/
# SageMath parsed files
# Pyre type checker
# pipenv
develop-eggs/
# Spyder project settings
# Flask stuff:
docs/_build/
venv/
# Rope project settings
# Sphinx documentation
pip-wheel-metadata/
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
.webassets-cache
# Installer logs
# Unit test / coverage reports
env.bak/
# Translations
celerybeat-schedule
dist/
.venv
target/
*.pot
\.DS_Store
*.log
.ropeproject
*.mo
venv.bak/
__pypackages__/
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
sdist/
.pyre/
# Environments
.spyproject
MANIFEST
.nox/
*.sage.py
#  Usually these files are written by a python script from a template
\.vscode/
__pycache__/
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
dmypy.json
.mypy_cache/
.single_run
.installed.cfg
# Celery stuff
db.sqlite3
*.spec
*.manifest
# Scrapy stuff:
htmlcov/
#Pipfile.lock
env/
.hypothesis/
lib64/
*.py,cover
.cache
profile_default/
*.so
local_settings.py
.tox/
.coverage*
pip-log.txt
.dmypy.json
*.egg-info/
.pytest_cache/
.python-version
# PyBuilder
test_cache
.coverage.*
#   install all needed dependencies.
*.py[cod]
# pyenv
lib/
coverage.xml
.env
# Byte-compiled / optimized / DLL files
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
*$py.class
.ipynb_checkpoints
# C extensions
build/
celerybeat.pid
*.cover
ENV/
ipython_config.py
db.sqlite3-journal
pip-delete-this-directory.txt
.spyderproject
.Python
*.egg
nosetests.xml
downloads/
# Django stuff:
/site
# Caches of the tests
var/
.coverage
**/__pycache__/*
# IPython
# mkdocs documentation
# Distribution / packaging